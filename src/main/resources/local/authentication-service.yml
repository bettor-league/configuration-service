server:
  port: 5000

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG

bettor-league:
  user:
    admin:
      email: admin@admin.fr
      password: admin
  client:
    ui:
      client-id: bettor-league-ui
      client-secret: ${BETTOR_LEAGUE_CLIENT_SECRET}
      scope:
        - read
    swagger:
      client-id: bettor-league-swagger
      client-secret: ${BETTOR_LEAGUE_SWAGGER_SECRET}
      scope:
        - read
    server:
      client-id: bettor-league-server
      client-secret: ${BETTOR_LEAGUE_SERVER_SECRET}
      scope:
        - read
        - write

security:
  social: true

spring:
  kafka:
    listener:
      ack-mode: manual_immediate
    consumer:
      bootstrap-servers: localhost:9092
      group-id: authentication-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    mongodb:
      host: localhost
      port: 27017
      database: bettor-league
  security:
    oauth2:
      client:
        registration:
          github:
            provider: github
            client-id: 1e04dd018b6ce99a0e02
            client-secret: ${BETTOR_LEAGUE_GITHUB_SECRET}
            scope: user:email
            client-name: Sign in with GitHub
          google:
            provider: google
            client-id: 983464398033-vgjunh6qcpbs9riprq99u46gjq7kbmcq.apps.googleusercontent.com
            client-secret: ${BETTOR_LEAGUE_GOOGLE_SECRET}
            scope: https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: email

---
spring:
  config:
    activate:
      on-profile: docker
  kafka:
    producer:
      bootstrap-servers: kafka:9092
  data:
    mongodb:
      host: mongo-database